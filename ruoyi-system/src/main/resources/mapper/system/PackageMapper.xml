<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.PackageMapper">

    <resultMap id="PackageVoResultMap" type="com.ruoyi.system.domain.vo.PackageVo">
        <id property="id" column="id" />
        <result property="exportFlag" column="export_flag" />
        <result property="client" column="client" />
        <result property="country" column="country" />
        <result property="importType" column="import_type" />
        <result property="loginid" column="loginid" />
        <result property="orderNumber" column="order_number" />
        <result property="valuePlnCod" column="value_pln_cod" />
        <result property="weightKg" column="weight_kg" />
        <result property="recipientName" column="recipient_name" />
        <result property="recipientPhone" column="recipient_phone" />
        <result property="recipientEmail" column="recipient_email" />
        <result property="description" column="description" />
        <result property="needBox" column="need_box" />
        <result property="createDate" column="create_date" />
        <result property="boxRemarkOne" column="box_remark_one" />
        <result property="boxRemarkTwo" column="box_remark_two" />
        <result property="boxRemarkThree" column="box_remark_three" />
        <result property="showSenderName" column="show_sender_name" />
        <result property="receiverName" column="receiver_name" />
        <result property="receiverAddress" column="receiver_address" />
        <result property="receiverPostalCode" column="receiver_postal_code" />
        <result property="receiverCity" column="receiver_city" />
        <result property="receiverCountryCode" column="receiver_country_code" />
        <result property="receiverPhone" column="receiver_phone" />
        <result property="receiverEmail" column="receiver_email" />
        <result property="weight" column="weight" />
        <result property="qtyPackages" column="qty_packages" />
        <result property="customerData1" column="customer_data1" />
        <result property="reference" column="reference" />
        <result property="ref1" column="ref1" />
        <result property="ref2" column="ref2" />
        <result property="pln" column="pln" />
        <result property="codCurrency" column="cod_currency" />
        <result property="oldWaybill" column="old_waybill" />
        <result property="newOrder" column="new_order" />
        <result property="backOrder" column="back_order" />
        <result property="newWaybill" column="new_waybill" />
        <result property="code1" column="code1" />
        <result property="code2" column="code2" />
        <result property="payerType" column="payer_type" />
        <result property="receiverCompany" column="receiver_company" />
        <result property="content" column="content" />
        <result property="sizeX" column="size_x" />
        <result property="sizeY" column="size_y" />
        <result property="sizeZ" column="size_z" />
        <result property="packId" column="pack_id" />
        <result property="waybill" column="waybill" />
        <result property="status" column="status" />
        <result property="packageId" column="package_id" />
        <result property="parcelId" column="parcel_id" />
        <result property="sessionId" column="session_id" />
        <result property="packagesGenerationResponseStatus" column="packages_generation_response_status" />
        <result property="pkgReference" column="pkg_reference" />
        <result property="pkgStatus" column="pkg_status" />
        <result property="senderId" column="sender_id" />
        <result property="receiverId" column="receiver_id" />
        <result property="originalId" column="original_id" />
        <result property="localId" column="local_id" />
        <result property="mbId" column="mb_id" />
        <result property="originalWaybill" column="original_waybill" />
        <result property="servicesId" column="services_id" />
        <result property="phone" column="phone" />
        <result property="postalCode" column="postal_code" />
        <result property="createUser" column="create_user" />
        <result property="updateUser" column="update_user" />
        <result property="createdTime" column="created_time" />
        <result property="updatedTime" column="updated_time" />
        <result property="downloadNum" column="download_num" />
        <result property="hisParam" column="his_param" />
        <result property="datStr" column="dat_str" />
        <result property="source" column="source" />
    </resultMap>

    <resultMap type="Package" id="PackageResult">
        <result property="id"    column="id"    />
        <result property="payerType"    column="payer_type"    />
        <result property="senderId"    column="sender_id"    />
        <result property="receiverId"    column="receiver_id"    />
        <result property="ref1"    column="ref1"    />
        <result property="ref2"    column="ref2"    />
        <result property="servicesId"    column="services_id"    />
        <result property="phone"    column="phone"    />
        <result property="postalCode"    column="postal_code"    />
        <result property="batchId"    column="batch_id"    />
        <result property="createUser"    column="create_user"    />
        <result property="updateUser"    column="update_user"    />
        <result property="createdTime"    column="created_time"    />
        <result property="updatedTime"    column="updated_time"    />
        <result property="isDelete"    column="is_delete"    />
        <result property="downloadNum"    column="download_num"    />
        <result property="parcelWaybill"    column="parcel_waybill"    />
        <result property="parcelReference"    column="parcel_reference"    />
        <result property="qtyPackages"    column="qty_packages"    />
    </resultMap>

    <sql id="selectPackageVo">
        select id, payer_type, sender_id, receiver_id, ref1, ref2, services_id, phone, postal_code, batch_id,
        create_user, update_user, created_time, updated_time, download_num, is_delete, parcel_waybill, parcel_reference, qty_packages from package
    </sql>

    <select id="selectPackageListForZfNew" parameterType="Package" resultMap="PackageVoResultMap">
        select pac.id,
        pac.payer_type,
        pac.sender_id,
        pac.receiver_id,
        pac.ref1,
        pac.ref2,
        pac.services_id,
        pac.phone,
        pac.postal_code,
        pac.batch_id,
        pac.create_user,
        pac.update_user,
        pac.created_time,
        pac.updated_time,
        pac.download_num,
        pac.parcel_waybill,
        pac.parcel_reference,
        pac.is_delete,
--               sender
        ass.name as show_sender_name,
--         reveiver
        ar.name as receiver_name,
               ar.address as receiver_address,
        ar.company as receiver_company,
               ar.postal_code as receiver_postal_code,
        ar.city as receiver_city,
        ar.country_code as receiver_country_code,
        ar.phone as receiver_phone,
        ar.email as receiver_email,
--         service
        s.cod_amount as pln,
--         packages_generation_response
        pgr.status as packages_generation_response_status,
               pgr.pkg_status,
               pgr.pkg_reference,
               pgr.package_id,
               pgr.session_id,
--         batch_task_history
        IFNULL(bth.type, '新增') as source,
--         parcel
        p.size_x, p.size_y, p.size_z, p.content, p.customer_data1,
        p.reference, p.weight, p.waybill, p.status

        from package pac

        left join address_sender ass on pac.sender_id = ass.id
        left join address_receiver ar on pac.receiver_id = ar.id
        left join services s on pac.services_id = s.id
        left join packages_generation_response pgr on pac.id = pgr.pack_id
        left join batch_task_history bth on pac.batch_id = bth.id
        left join parcel p on pac.id = p.package_id

        where Not Exists
        (
        Select rel.new_package_id
        from redirect_rel rel
        where pac.id = rel.new_package_id
        )
        and Not Exists
        (
        Select localRel.old_package_id
        from pack_rel_local localRel
        where pac.id = localRel.old_package_id
        )
        and Not Exists
        (
        Select mrd.platform_trade_code
        from mb_return_dto mrd
        where pac.parcel_reference = mrd.platform_trade_code
        )
        and
        pac.id > (select min_id from select_pac_min_num) and
        pac.is_delete = 0
        <choose>
            <when  test="exportFlag != null and exportFlag ==1 and ids!= null and ids.size()>0" >
                AND pac.id in
                <foreach collection="ids" item="item" open="(" close=")" separator="," >
                    #{item}
                </foreach>
            </when >
            <otherwise>
            </otherwise>
        </choose>
        <if test="payerType != null  and payerType != ''"> and pac.payer_type = #{payerType}</if>
        <if test="senderId != null "> and pac.sender_id = #{senderId}</if>
        <if test="receiverId != null "> and pac.receiver_id = #{receiverId}</if>
        <if test="ref1 != null  and ref1 != ''"> and pac.ref1 = #{ref1}</if>
        <if test="ref2 != null  and ref2 != ''"> and pac.ref2 = #{ref2}</if>
        <if test="servicesId != null "> and pac.services_id = #{servicesId}</if>
        <if test="phone != null  and phone != ''"> and pac.phone = #{phone}</if>
        <if test="postalCode != null  and postalCode != ''"> and pac.postal_code = #{postalCode}</if>
        <if test="batchId != null "> and pac.batch_id = #{batchId}</if>
        <if test="createUser != null  and createUser != ''"> and pac.create_user = #{createUser}</if>
        <if test="updateUser != null  and updateUser != ''"> and pac.update_user = #{updateUser}</if>
        <if test="createdTime != null"> and date_format(pac.created_time,'%Y-%m-%d') = date_format(#{createdTime},'%Y-%m-%d')</if>
        <if test="updatedTime != null"> and date_format(pac.updated_time,'%Y-%m-%d') = date_format(#{updatedTime},'%Y-%m-%d')</if>
        <if test="paramMonth != null  and paramMonth != ''">and date_format(pac.created_time,'%Y%m') = #{paramMonth}</if>
        <if test="parcelWaybill != null  and parcelWaybill != ''"> and pac.parcel_waybill = #{parcelWaybill}</if>
        <if test="parcelReference != null  and parcelReference != ''"> and pac.parcel_reference = #{parcelReference}</if>
        order by pac.updated_time desc
    </select>

    <select id="selectPackageListForRelNew" parameterType="Package" resultMap="PackageVoResultMap">
        select pac.id,
        pac.payer_type,
        pac.sender_id,
        pac.receiver_id,
        pac.ref1,
        pac.ref2,
        pac.services_id,
        pac.phone,
        pac.postal_code,
        pac.batch_id,
        pac.create_user,
        pac.update_user,
        pac.created_time,
        pac.updated_time,
        pac.download_num,
        pac.parcel_waybill,
        pac.parcel_reference,
        pac.is_delete,
        --               sender
        ass.name as show_sender_name,
        --         reveiver
        ar.name as receiver_name,
        ar.address as receiver_address,
        ar.company as receiver_company,
        ar.postal_code as receiver_postal_code,
        ar.city as receiver_city,
        ar.country_code as receiver_country_code,
        ar.phone as receiver_phone,
        ar.email as receiver_email,
        --         service
        s.cod_amount as pln,
        --         packages_generation_response
        pgr.status as packages_generation_response_status,
        pgr.pkg_status,
        pgr.pkg_reference,
        pgr.package_id,
        pgr.session_id,
        --         batch_task_history
        IFNULL(bth.type, '新增') as source,
        --         parcel
        p.size_x, p.size_y, p.size_z, p.content, p.customer_data1,
        p.reference, p.weight, p.waybill, p.status

        from package pac
        inner join redirect_rel rel
        on pac.id = rel.new_package_id
        left join address_sender ass on pac.sender_id = ass.id
        left join address_receiver ar on pac.receiver_id = ar.id
        left join services s on pac.services_id = s.id
        left join packages_generation_response pgr on pac.id = pgr.pack_id
        left join batch_task_history bth on pac.batch_id = bth.id
        left join parcel p on pac.id = p.package_id

        <where>
            pac.id > (select min_id from select_pac_min_num) and
            pac.is_delete = 0
            <choose>
                <when  test="exportFlag != null and exportFlag ==1 and ids!= null and ids.size()>0" >
                    AND pac.id in
                    <foreach collection="ids" item="item" open="(" close=")" separator="," >
                        #{item}
                    </foreach>
                </when >
                <otherwise>
                </otherwise>
            </choose>
            <if test="payerType != null  and payerType != ''"> and pac.payer_type = #{payerType}</if>
            <if test="senderId != null "> and pac.sender_id = #{senderId}</if>
            <if test="receiverId != null "> and pac.receiver_id = #{receiverId}</if>
            <if test="ref1 != null  and ref1 != ''"> and pac.ref1 = #{ref1}</if>
            <if test="ref2 != null  and ref2 != ''"> and pac.ref2 = #{ref2}</if>
            <if test="servicesId != null "> and pac.services_id = #{servicesId}</if>
            <if test="phone != null  and phone != ''"> and pac.phone = #{phone}</if>
            <if test="postalCode != null  and postalCode != ''"> and pac.postal_code = #{postalCode}</if>
            <if test="batchId != null "> and pac.batch_id = #{batchId}</if>
            <if test="createUser != null  and createUser != ''"> and pac.create_user = #{createUser}</if>
            <if test="updateUser != null  and updateUser != ''"> and pac.update_user = #{updateUser}</if>
            <if test="createdTime != null"> and date_format(pac.created_time,'%Y-%m-%d') = date_format(#{createdTime},'%Y-%m-%d')</if>
            <if test="updatedTime != null"> and date_format(pac.updated_time,'%Y-%m-%d') = date_format(#{updatedTime},'%Y-%m-%d')</if>
            <if test="paramMonth != null  and paramMonth != ''">and date_format(pac.created_time,'%Y%m') = #{paramMonth}</if>
            <if test="parcelWaybill != null  and parcelWaybill != ''"> and pac.parcel_waybill = #{parcelWaybill}</if>
            <if test="parcelReference != null  and parcelReference != ''"> and pac.parcel_reference = #{parcelReference}</if>
        </where>
        order by pac.updated_time desc
    </select>

    <select id="selectPackageListForLocalNew" parameterType="Package" resultMap="PackageVoResultMap">
        select pac.id,
        pac.payer_type,
        pac.sender_id,
        pac.receiver_id,
        pac.ref1,
        pac.ref2,
        pac.services_id,
        pac.phone,
        pac.postal_code,
        pac.batch_id,
        pac.create_user,
        pac.update_user,
        pac.created_time,
        pac.updated_time,
        pac.download_num,
        pac.parcel_waybill,
        pac.parcel_reference,
        pac.qty_packages,
        pac.is_delete,
        --               sender
        ass.name as show_sender_name,
        --         reveiver
        ar.name as receiver_name,
        ar.address as receiver_address,
        ar.company as receiver_company,
        ar.postal_code as receiver_postal_code,
        ar.city as receiver_city,
        ar.country_code as receiver_country_code,
        ar.phone as receiver_phone,
        ar.email as receiver_email,
        --         service
        s.cod_amount as pln,
        --         packages_generation_response
        pgr.status as packages_generation_response_status,
        pgr.pkg_status,
        pgr.pkg_reference,
        pgr.package_id,
        pgr.session_id,
        --         batch_task_history
        IFNULL(bth.type, '新增') as source,
        --         parcel
        p.size_x, p.size_y, p.size_z, p.content, p.customer_data1,
        p.reference, p.weight, p.waybill, p.status

        from package pac
        inner join pack_rel_local rel
        on pac.id = rel.old_package_id
        left join address_sender ass on pac.sender_id = ass.id
        left join address_receiver ar on pac.receiver_id = ar.id
        left join services s on pac.services_id = s.id
        left join packages_generation_response pgr on pac.id = pgr.pack_id
        left join batch_task_history bth on pac.batch_id = bth.id
        left join parcel p on pac.id = p.package_id

        <where>
            pac.id > (select min_id from select_pac_min_num) and
            pac.is_delete = 0
            <choose>
                <when  test="exportFlag != null and exportFlag ==1 and ids!= null and ids.size()>0" >
                    AND pac.id in
                    <foreach collection="ids" item="item" open="(" close=")" separator="," >
                        #{item}
                    </foreach>
                </when >
                <otherwise>
                </otherwise>
            </choose>
            <if test="code1 != null  and code1 != ''">
                and code1 like concat('%', #{code1}, '%') </if>
            <if test="code2 != null  and code2 != ''">
                and code2 like concat('%', #{code2}, '%') </if>
            <if test="code3 != null  and code3 != ''">
                and code3 like concat('%', #{code3}, '%') </if>
            <if test="payerType != null  and payerType != ''"> and pac.payer_type = #{payerType}</if>
            <if test="senderId != null "> and pac.sender_id = #{senderId}</if>
            <if test="receiverId != null "> and pac.receiver_id = #{receiverId}</if>
            <if test="ref1 != null  and ref1 != ''"> and pac.ref1 = #{ref1}</if>
            <if test="ref2 != null  and ref2 != ''"> and pac.ref2 = #{ref2}</if>
            <if test="servicesId != null "> and pac.services_id = #{servicesId}</if>
            <if test="phone != null  and phone != ''"> and pac.phone = #{phone}</if>
            <if test="postalCode != null  and postalCode != ''"> and pac.postal_code = #{postalCode}</if>
            <if test="batchId != null "> and pac.batch_id = #{batchId}</if>
            <if test="createUser != null  and createUser != ''"> and pac.create_user = #{createUser}</if>
            <if test="updateUser != null  and updateUser != ''"> and pac.update_user = #{updateUser}</if>
            <if test="createdTime != null"> and date_format(pac.created_time,'%Y-%m-%d') = date_format(#{createdTime},'%Y-%m-%d')</if>
            <if test="updatedTime != null"> and date_format(pac.updated_time,'%Y-%m-%d') = date_format(#{updatedTime},'%Y-%m-%d')</if>
            <if test="paramMonth != null  and paramMonth != ''">and date_format(pac.created_time,'%Y%m') = #{paramMonth}</if>
            <if test="parcelWaybill != null  and parcelWaybill != ''"> and pac.parcel_waybill = #{parcelWaybill}</if>
            <if test="parcelReference != null  and parcelReference != ''"> and pac.parcel_reference = #{parcelReference}</if>
            <if test="qtyPackages != null  and qtyPackages != ''"> and pac.qty_packages = #{qtyPackages}</if>
        </where>
        order by pac.updated_time desc
    </select>

    <select id="selectPackageListForMbNew" parameterType="Package" resultMap="PackageVoResultMap">
        select pac.id,
        pac.payer_type,
        pac.sender_id,
        pac.receiver_id,
        pac.ref1,
        pac.ref2,
        pac.services_id,
        pac.phone,
        pac.postal_code,
        pac.batch_id,
        pac.create_user,
        pac.update_user,
        pac.created_time,
        pac.updated_time,
        pac.download_num,
        pac.parcel_waybill,
        pac.parcel_reference,
        pac.qty_packages,
        pac.is_delete,
        --               sender
        ass.name as show_sender_name,
        --         reveiver
        ar.name as receiver_name,
        ar.address as receiver_address,
        ar.company as receiver_company,
        ar.postal_code as receiver_postal_code,
        ar.city as receiver_city,
        ar.country_code as receiver_country_code,
        ar.phone as receiver_phone,
        ar.email as receiver_email,
        --         service
        s.cod_amount as pln,
        --         packages_generation_response
        pgr.status as packages_generation_response_status,
        pgr.pkg_status,
        pgr.pkg_reference,
        pgr.package_id,
        pgr.session_id,
        --         batch_task_history
        IFNULL(bth.type, '新增') as source,
        --         parcel
        p.size_x, p.size_y, p.size_z, p.content, p.customer_data1,
        p.reference, p.weight, p.waybill, p.status

        from package pac
        inner join mb_return_dto mrd on pac.mb_code = mrd.code
        left join address_sender ass on pac.sender_id = ass.id
        left join address_receiver ar on pac.receiver_id = ar.id
        left join services s on pac.services_id = s.id
        left join packages_generation_response pgr on pac.id = pgr.pack_id
        left join batch_task_history bth on pac.batch_id = bth.id
        left join parcel p on pac.id = p.package_id

        <where>
            pac.id > (select min_id from select_pac_min_num) and
            pac.is_delete = 0
            <choose>
                <when  test="exportFlag != null and exportFlag ==1 and ids!= null and ids.size()>0" >
                    AND pac.id in
                    <foreach collection="ids" item="item" open="(" close=")" separator="," >
                        #{item}
                    </foreach>
                </when >
                <otherwise>
                </otherwise>
            </choose>
            <if test="code1 != null  and code1 != ''">
                and mrd.platform_trade_code like concat('%', #{code1}, '%') </if>
            <if test="payerType != null  and payerType != ''"> and pac.payer_type = #{payerType}</if>
            <if test="senderId != null "> and pac.sender_id = #{senderId}</if>
            <if test="receiverId != null "> and pac.receiver_id = #{receiverId}</if>
            <if test="ref1 != null  and ref1 != ''"> and pac.ref1 = #{ref1}</if>
            <if test="ref2 != null  and ref2 != ''"> and pac.ref2 = #{ref2}</if>
            <if test="servicesId != null "> and pac.services_id = #{servicesId}</if>
            <if test="phone != null  and phone != ''"> and pac.phone = #{phone}</if>
            <if test="postalCode != null  and postalCode != ''"> and pac.postal_code = #{postalCode}</if>
            <if test="batchId != null "> and pac.batch_id = #{batchId}</if>
            <if test="createUser != null  and createUser != ''"> and mrd.create_by = #{createUser}</if>
            <if test="updateUser != null  and updateUser != ''"> and pac.update_user = #{updateUser}</if>
            <if test="createdTime != null"> and date_format(pac.created_time,'%Y-%m-%d') = date_format(#{createdTime},'%Y-%m-%d')</if>
            <if test="updatedTime != null"> and date_format(pac.updated_time,'%Y-%m-%d') = date_format(#{updatedTime},'%Y-%m-%d')</if>
            <if test="paramMonth != null  and paramMonth != ''">and date_format(pac.created_time,'%Y%m') = #{paramMonth}</if>
            <if test="parcelWaybill != null  and parcelWaybill != ''"> and pac.parcel_waybill = #{parcelWaybill}</if>
            <if test="parcelReference != null  and parcelReference != ''"> and pac.parcel_reference = #{parcelReference}</if>
            <if test="qtyPackages != null  and qtyPackages != ''"> and pac.qty_packages = #{qtyPackages}</if>
        </where>
        order by pac.updated_time desc
    </select>

    <select id="selectPackageList" parameterType="Package" resultMap="PackageResult">
        <include refid="selectPackageVo"/>
        <where>
            pac.id > (select min_id from select_pac_min_num) and
            is_delete = 0
            <choose>
            <when  test="exportFlag != null and exportFlag ==1 and ids!= null and ids.size()>0" >
                AND id in
                <foreach collection="ids" item="item" open="(" close=")" separator="," >
                    #{item}
                </foreach>
            </when >
            <otherwise>
            </otherwise>
            </choose>
            <if test="payerType != null  and payerType != ''"> and payer_type = #{payerType}</if>
            <if test="senderId != null "> and sender_id = #{senderId}</if>
            <if test="receiverId != null "> and receiver_id = #{receiverId}</if>
            <if test="ref1 != null  and ref1 != ''"> and ref1 = #{ref1}</if>
            <if test="ref2 != null  and ref2 != ''"> and ref2 = #{ref2}</if>
            <if test="servicesId != null "> and services_id = #{servicesId}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="postalCode != null  and postalCode != ''"> and postal_code = #{postalCode}</if>
            <if test="batchId != null "> and batch_id = #{batchId}</if>
            <if test="createUser != null  and createUser != ''"> and create_user = #{createUser}</if>
            <if test="updateUser != null  and updateUser != ''"> and update_user = #{updateUser}</if>
            <if test="createdTime != null"> and date_format(created_time,'%Y-%m-%d') = date_format(#{createdTime},'%Y-%m-%d')</if>
            <if test="updatedTime != null"> and date_format(updated_time,'%Y-%m-%d') = date_format(#{updatedTime},'%Y-%m-%d')</if>
            <if test="paramMonth != null  and paramMonth != ''">and date_format(created_time,'%Y%m') = #{paramMonth}</if>
            <if test="parcelWaybill != null  and parcelWaybill != ''"> and parcel_waybill = #{parcelWaybill}</if>
            <if test="parcelReference != null  and parcelReference != ''"> and parcel_reference = #{parcelReference}</if>
        </where>
        order by updated_time desc
    </select>

    <select id="selectPackageListForZf" parameterType="Package" resultMap="PackageResult">
        select pac.id,
        pac.payer_type,
        pac.sender_id,
        pac.receiver_id,
        pac.ref1,
        pac.ref2,
        pac.services_id,
        pac.phone,
        pac.postal_code,
        pac.batch_id,
        pac.create_user,
        pac.update_user,
        pac.created_time,
        pac.updated_time,
        pac.download_num,
        pac.parcel_waybill,
        pac.parcel_reference,
        pac.is_delete
        from package pac
        where Not Exists
        (
        Select rel.new_package_id
        from redirect_rel rel
        where pac.id = rel.new_package_id
        )
        and Not Exists
        (
        Select localRel.old_package_id
        from pack_rel_local localRel
        where pac.id = localRel.old_package_id
        )
        and Not Exists
        (
        Select mrd.platform_trade_code
        from mb_return_dto mrd
        where pac.parcel_reference = mrd.platform_trade_code
        )
        and
        pac.id > (select min_id from select_pac_min_num) and
        pac.is_delete = 0
            <choose>
                <when  test="exportFlag != null and exportFlag ==1 and ids!= null and ids.size()>0" >
                    AND pac.id in
                    <foreach collection="ids" item="item" open="(" close=")" separator="," >
                        #{item}
                    </foreach>
                </when >
                <otherwise>
                </otherwise>
            </choose>
            <if test="payerType != null  and payerType != ''"> and pac.payer_type = #{payerType}</if>
            <if test="senderId != null "> and pac.sender_id = #{senderId}</if>
            <if test="receiverId != null "> and pac.receiver_id = #{receiverId}</if>
            <if test="ref1 != null  and ref1 != ''"> and pac.ref1 = #{ref1}</if>
            <if test="ref2 != null  and ref2 != ''"> and pac.ref2 = #{ref2}</if>
            <if test="servicesId != null "> and pac.services_id = #{servicesId}</if>
            <if test="phone != null  and phone != ''"> and pac.phone = #{phone}</if>
            <if test="postalCode != null  and postalCode != ''"> and pac.postal_code = #{postalCode}</if>
            <if test="batchId != null "> and pac.batch_id = #{batchId}</if>
            <if test="createUser != null  and createUser != ''"> and pac.create_user = #{createUser}</if>
            <if test="updateUser != null  and updateUser != ''"> and pac.update_user = #{updateUser}</if>
            <if test="createdTime != null"> and date_format(pac.created_time,'%Y-%m-%d') = date_format(#{createdTime},'%Y-%m-%d')</if>
            <if test="updatedTime != null"> and date_format(pac.updated_time,'%Y-%m-%d') = date_format(#{updatedTime},'%Y-%m-%d')</if>
            <if test="paramMonth != null  and paramMonth != ''">and date_format(pac.created_time,'%Y%m') = #{paramMonth}</if>
            <if test="parcelWaybill != null  and parcelWaybill != ''"> and pac.parcel_waybill = #{parcelWaybill}</if>
        <if test="parcelReference != null  and parcelReference != ''"> and pac.parcel_reference = #{parcelReference}</if>
        order by updated_time desc
    </select>

    <select id="selectPackageListForRel" parameterType="Package" resultMap="PackageResult">
        select pac.id,
        pac.payer_type,
        pac.sender_id,
        pac.receiver_id,
        pac.ref1,
        pac.ref2,
        pac.services_id,
        pac.phone,
        pac.postal_code,
        pac.batch_id,
        pac.create_user,
        pac.update_user,
        pac.created_time,
        pac.updated_time,
        pac.download_num,
        pac.parcel_waybill,
        pac.parcel_reference,
        pac.is_delete
        from package pac
        inner join redirect_rel rel
        on pac.id = rel.new_package_id
        <where>
            pac.id > (select min_id from select_pac_min_num) and
            pac.is_delete = 0
            <choose>
                <when  test="exportFlag != null and exportFlag ==1 and ids!= null and ids.size()>0" >
                    AND pac.id in
                    <foreach collection="ids" item="item" open="(" close=")" separator="," >
                        #{item}
                    </foreach>
                </when >
                <otherwise>
                </otherwise>
            </choose>
            <if test="payerType != null  and payerType != ''"> and pac.payer_type = #{payerType}</if>
            <if test="senderId != null "> and pac.sender_id = #{senderId}</if>
            <if test="receiverId != null "> and pac.receiver_id = #{receiverId}</if>
            <if test="ref1 != null  and ref1 != ''"> and pac.ref1 = #{ref1}</if>
            <if test="ref2 != null  and ref2 != ''"> and pac.ref2 = #{ref2}</if>
            <if test="servicesId != null "> and pac.services_id = #{servicesId}</if>
            <if test="phone != null  and phone != ''"> and pac.phone = #{phone}</if>
            <if test="postalCode != null  and postalCode != ''"> and pac.postal_code = #{postalCode}</if>
            <if test="batchId != null "> and pac.batch_id = #{batchId}</if>
            <if test="createUser != null  and createUser != ''"> and pac.create_user = #{createUser}</if>
            <if test="updateUser != null  and updateUser != ''"> and pac.update_user = #{updateUser}</if>
            <if test="createdTime != null"> and date_format(pac.created_time,'%Y-%m-%d') = date_format(#{createdTime},'%Y-%m-%d')</if>
            <if test="updatedTime != null"> and date_format(pac.updated_time,'%Y-%m-%d') = date_format(#{updatedTime},'%Y-%m-%d')</if>
            <if test="paramMonth != null  and paramMonth != ''">and date_format(pac.created_time,'%Y%m') = #{paramMonth}</if>
            <if test="parcelWaybill != null  and parcelWaybill != ''"> and pac.parcel_waybill = #{parcelWaybill}</if>
            <if test="parcelReference != null  and parcelReference != ''"> and pac.parcel_reference = #{parcelReference}</if>
        </where>
        order by updated_time desc
    </select>

    <select id="selectPackageListForLocal" parameterType="Package" resultMap="PackageResult">
        select pac.id,
        pac.payer_type,
        pac.sender_id,
        pac.receiver_id,
        pac.ref1,
        pac.ref2,
        pac.services_id,
        pac.phone,
        pac.postal_code,
        pac.batch_id,
        pac.create_user,
        pac.update_user,
        pac.created_time,
        pac.updated_time,
        pac.download_num,
        pac.parcel_waybill,
        pac.parcel_reference,
        pac.qty_packages,
        pac.is_delete
        from package pac
        inner join pack_rel_local rel
        on pac.id = rel.old_package_id
        <where>
            pac.id > (select min_id from select_pac_min_num) and
            pac.is_delete = 0
            <choose>
                <when  test="exportFlag != null and exportFlag ==1 and ids!= null and ids.size()>0" >
                    AND pac.id in
                    <foreach collection="ids" item="item" open="(" close=")" separator="," >
                        #{item}
                    </foreach>
                </when >
                <otherwise>
                </otherwise>
            </choose>
            <if test="code1 != null  and code1 != ''">
                and code1 like concat('%', #{code1}, '%') </if>
            <if test="code2 != null  and code2 != ''">
                and code2 like concat('%', #{code2}, '%') </if>
            <if test="code3 != null  and code3 != ''">
                and code3 like concat('%', #{code3}, '%') </if>
            <if test="payerType != null  and payerType != ''"> and pac.payer_type = #{payerType}</if>
            <if test="senderId != null "> and pac.sender_id = #{senderId}</if>
            <if test="receiverId != null "> and pac.receiver_id = #{receiverId}</if>
            <if test="ref1 != null  and ref1 != ''"> and pac.ref1 = #{ref1}</if>
            <if test="ref2 != null  and ref2 != ''"> and pac.ref2 = #{ref2}</if>
            <if test="servicesId != null "> and pac.services_id = #{servicesId}</if>
            <if test="phone != null  and phone != ''"> and pac.phone = #{phone}</if>
            <if test="postalCode != null  and postalCode != ''"> and pac.postal_code = #{postalCode}</if>
            <if test="batchId != null "> and pac.batch_id = #{batchId}</if>
            <if test="createUser != null  and createUser != ''"> and pac.create_user = #{createUser}</if>
            <if test="updateUser != null  and updateUser != ''"> and pac.update_user = #{updateUser}</if>
            <if test="createdTime != null"> and date_format(pac.created_time,'%Y-%m-%d') = date_format(#{createdTime},'%Y-%m-%d')</if>
            <if test="updatedTime != null"> and date_format(pac.updated_time,'%Y-%m-%d') = date_format(#{updatedTime},'%Y-%m-%d')</if>
            <if test="paramMonth != null  and paramMonth != ''">and date_format(pac.created_time,'%Y%m') = #{paramMonth}</if>
            <if test="parcelWaybill != null  and parcelWaybill != ''"> and pac.parcel_waybill = #{parcelWaybill}</if>
            <if test="parcelReference != null  and parcelReference != ''"> and pac.parcel_reference = #{parcelReference}</if>
            <if test="qtyPackages != null  and qtyPackages != ''"> and pac.qty_packages = #{qtyPackages}</if>
        </where>
        order by updated_time desc
    </select>

    <select id="selectPackageListForMb" parameterType="Package" resultMap="PackageResult">
        select pac.id,
        pac.payer_type,
        pac.sender_id,
        pac.receiver_id,
        pac.ref1,
        pac.ref2,
        pac.services_id,
        pac.phone,
        pac.postal_code,
        pac.batch_id,
        pac.create_user,
        pac.update_user,
        pac.created_time,
        pac.updated_time,
        pac.download_num,
        pac.parcel_waybill,
        pac.parcel_reference,
        pac.qty_packages,
        pac.is_delete
        from package pac
        inner join mb_return_dto mrd on pac.mb_code = mrd.code
        <where>
            pac.id > (select min_id from select_pac_min_num) and
            pac.is_delete = 0
            <choose>
                <when  test="exportFlag != null and exportFlag ==1 and ids!= null and ids.size()>0" >
                    AND pac.id in
                    <foreach collection="ids" item="item" open="(" close=")" separator="," >
                        #{item}
                    </foreach>
                </when >
                <otherwise>
                </otherwise>
            </choose>
            <if test="code1 != null  and code1 != ''">
                and mrd.platform_trade_code like concat('%', #{code1}, '%') </if>


            <if test="payerType != null  and payerType != ''"> and pac.payer_type = #{payerType}</if>
            <if test="senderId != null "> and pac.sender_id = #{senderId}</if>
            <if test="receiverId != null "> and pac.receiver_id = #{receiverId}</if>
            <if test="ref1 != null  and ref1 != ''"> and pac.ref1 = #{ref1}</if>
            <if test="ref2 != null  and ref2 != ''"> and pac.ref2 = #{ref2}</if>
            <if test="servicesId != null "> and pac.services_id = #{servicesId}</if>
            <if test="phone != null  and phone != ''"> and pac.phone = #{phone}</if>
            <if test="postalCode != null  and postalCode != ''"> and pac.postal_code = #{postalCode}</if>
            <if test="batchId != null "> and pac.batch_id = #{batchId}</if>
            <if test="createUser != null  and createUser != ''"> and mrd.create_by = #{createUser}</if>
            <if test="updateUser != null  and updateUser != ''"> and pac.update_user = #{updateUser}</if>
            <if test="createdTime != null"> and date_format(pac.created_time,'%Y-%m-%d') = date_format(#{createdTime},'%Y-%m-%d')</if>
            <if test="updatedTime != null"> and date_format(pac.updated_time,'%Y-%m-%d') = date_format(#{updatedTime},'%Y-%m-%d')</if>
            <if test="paramMonth != null  and paramMonth != ''">and date_format(pac.created_time,'%Y%m') = #{paramMonth}</if>
            <if test="parcelWaybill != null  and parcelWaybill != ''"> and pac.parcel_waybill = #{parcelWaybill}</if>
            <if test="parcelReference != null  and parcelReference != ''"> and pac.parcel_reference = #{parcelReference}</if>
            <if test="qtyPackages != null  and qtyPackages != ''"> and pac.qty_packages = #{qtyPackages}</if>
        </where>
        order by updated_time desc
    </select>

    <select id="selectPackageById" parameterType="Long" resultMap="PackageResult">
        <include refid="selectPackageVo"/>
        where id = #{id}
    </select>

    <select id="selectPackageByIdIn" parameterType="list" resultMap="PackageResult">
        <include refid="selectPackageVo"/>
        where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectPackageByBatchIdIn" parameterType="list" resultMap="PackageResult">
        <include refid="selectPackageVo"/>
        where batch_id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectMaxId"  resultType="long">
        select max(id)
            from package
    </select>

    <update id="updateDownloadNum" parameterType="list">
        update package
        SET download_num = download_num + 1
        where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <insert id="insertPackage" parameterType="Package" useGeneratedKeys="true" keyProperty="id">
        insert into package
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="payerType != null">payer_type,</if>
            <if test="senderId != null">sender_id,</if>
            <if test="receiverId != null">receiver_id,</if>
            <if test="ref1 != null">ref1,</if>
            <if test="ref2 != null">ref2,</if>
            <if test="servicesId != null">services_id,</if>
            <if test="phone != null">phone,</if>
            <if test="postalCode != null">postal_code,</if>
            <if test="batchId != null">batch_id,</if>
            <if test="parcelWaybill != null">parcel_waybill,</if>
            <if test="parcelReference != null">parcel_reference,</if>
            <if test="qtyPackages != null">qty_packages,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
            created_time,
            updated_time,
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="payerType != null">#{payerType},</if>
            <if test="senderId != null">#{senderId},</if>
            <if test="receiverId != null">#{receiverId},</if>
            <if test="ref1 != null">#{ref1},</if>
            <if test="ref2 != null">#{ref2},</if>
            <if test="servicesId != null">#{servicesId},</if>
            <if test="phone != null">#{phone},</if>
            <if test="postalCode != null">#{postalCode},</if>
            <if test="batchId != null">#{batchId},</if>
            <if test="parcelWaybill != null">#{parcelWaybill},</if>
            <if test="parcelReference != null">#{parcelReference},</if>
            <if test="qtyPackages != null">#{qtyPackages},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
            sysdate(),
            sysdate(),
         </trim>
    </insert>

    <insert id="insertPackageWithId" parameterType="Package">
        insert into package
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="payerType != null">payer_type,</if>
            <if test="senderId != null">sender_id,</if>
            <if test="receiverId != null">receiver_id,</if>
            <if test="ref1 != null">ref1,</if>
            <if test="ref2 != null">ref2,</if>
            <if test="servicesId != null">services_id,</if>
            <if test="phone != null">phone,</if>
            <if test="postalCode != null">postal_code,</if>
            <if test="batchId != null">batch_id,</if>
            <if test="parcelWaybill != null">parcel_waybill,</if>
            <if test="parcelReference != null">parcel_reference,</if>
            <if test="qtyPackages != null">qty_packages,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
            created_time,
            updated_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="payerType != null">#{payerType},</if>
            <if test="senderId != null">#{senderId},</if>
            <if test="receiverId != null">#{receiverId},</if>
            <if test="ref1 != null">#{ref1},</if>
            <if test="ref2 != null">#{ref2},</if>
            <if test="servicesId != null">#{servicesId},</if>
            <if test="phone != null">#{phone},</if>
            <if test="postalCode != null">#{postalCode},</if>
            <if test="batchId != null">#{batchId},</if>
            <if test="parcelWaybill != null">#{parcelWaybill},</if>
            <if test="parcelReference != null">#{parcelReference},</if>
            <if test="qtyPackages != null">#{qtyPackages},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
            sysdate(),
            sysdate(),
        </trim>
    </insert>

    <insert id="batchInsert" >
        insert into package (id, payer_type, sender_id, receiver_id, ref1, ref2, services_id, phone, postal_code, batch_id, parcel_waybill,
        parcel_reference, qty_packages, mb_code, create_user, update_user, created_time, updated_time)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},
            #{item.payerType},
            #{item.senderId},
            #{item.receiverId},
            #{item.ref1},
            #{item.ref2},
            #{item.servicesId},
            #{item.phone},
            #{item.postalCode},
            #{item.batchId},
            #{item.parcelWaybill},
            #{item.parcelReference},
            #{item.qtyPackages},
            #{item.mbCode},
            #{item.createUser},
            #{item.updateUser},
            sysdate(),
            sysdate())
        </foreach>
    </insert>

    <update id="updatePackage" parameterType="Package">
        update package
        <trim prefix="SET" suffixOverrides=",">
            <if test="payerType != null">payer_type = #{payerType},</if>
            <if test="senderId != null">sender_id = #{senderId},</if>
            <if test="receiverId != null">receiver_id = #{receiverId},</if>
            <if test="ref1 != null">ref1 = #{ref1},</if>
            <if test="ref2 != null">ref2 = #{ref2},</if>
            <if test="servicesId != null">services_id = #{servicesId},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="postalCode != null">postal_code = #{postalCode},</if>
            <if test="batchId != null">batch_id = #{batchId},</if>
            <if test="parcelWaybill != null">parcel_waybill = #{parcelWaybill},</if>
            <if test="parcelReference != null">parcel_reference = #{parcelReference},</if>
            <if test="qtyPackages != null">qty_packages = #{qtyPackages},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
            <if test="downloadNum != null">download_num = #{downloadNum},</if>
            updated_time = sysdate(),
        </trim>
        where id = #{id}
    </update>

    <update id="deletePackageById" parameterType="Long">
        update package set is_delete = 1, updated_time = sysdate()
        where id = #{id}
    </update>

    <update id="deletePackageByIds" parameterType="String">
        update package set is_delete = 1, updated_time = sysdate()
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="deletePackageByIdsReal" parameterType="String">
        delete from package
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
        and parcel_waybill is null
    </delete>

</mapper>
