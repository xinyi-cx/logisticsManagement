<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.PackageMapper">
    
    <resultMap type="Package" id="PackageResult">
        <result property="id"    column="id"    />
        <result property="payerType"    column="payer_type"    />
        <result property="senderId"    column="sender_id"    />
        <result property="receiverId"    column="receiver_id"    />
        <result property="ref1"    column="ref1"    />
        <result property="ref2"    column="ref2"    />
        <result property="servicesId"    column="services_id"    />
        <result property="phone"    column="phone"    />
        <result property="postalCode"    column="postal_code"    />
        <result property="batchId"    column="batch_id"    />
        <result property="createUser"    column="create_user"    />
        <result property="updateUser"    column="update_user"    />
        <result property="createdTime"    column="created_time"    />
        <result property="updatedTime"    column="updated_time"    />
        <result property="isDelete"    column="is_delete"    />
        <result property="downloadNum"    column="download_num"    />
    </resultMap>

    <sql id="selectPackageVo">
        select id, payer_type, sender_id, receiver_id, ref1, ref2, services_id, phone, postal_code, batch_id, create_user, update_user, created_time, updated_time, download_num, is_delete from package
    </sql>

    <select id="selectPackageList" parameterType="Package" resultMap="PackageResult">
        <include refid="selectPackageVo"/>
        <where>
            is_delete = 0
            <choose>
            <when  test="exportFlag != null and exportFlag ==1 and ids!= null and ids.size()>0" >
                AND id in
                <foreach collection="ids" item="item" open="(" close=")" separator="," >
                    #{item}
                </foreach>
            </when >
            <otherwise>
            <if test="payerType != null  and payerType != ''"> and payer_type = #{payerType}</if>
            <if test="senderId != null "> and sender_id = #{senderId}</if>
            <if test="receiverId != null "> and receiver_id = #{receiverId}</if>
            <if test="ref1 != null  and ref1 != ''"> and ref1 = #{ref1}</if>
            <if test="ref2 != null  and ref2 != ''"> and ref2 = #{ref2}</if>
            <if test="servicesId != null "> and services_id = #{servicesId}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="postalCode != null  and postalCode != ''"> and postal_code = #{postalCode}</if>
            <if test="batchId != null "> and batch_id = #{batchId}</if>
            <if test="createUser != null  and createUser != ''"> and create_user = #{createUser}</if>
            <if test="updateUser != null  and updateUser != ''"> and update_user = #{updateUser}</if>
            <if test="createdTime != null"> and date_format(created_time,'%Y-%m-%d') = date_format(#{createdTime},'%Y-%m-%d')</if>
            <if test="updatedTime != null"> and date_format(updated_time,'%Y-%m-%d') = date_format(#{updatedTime},'%Y-%m-%d')</if>
            <if test="paramMonth != null  and paramMonth != ''">and date_format(created_time,'%Y%m') = #{paramMonth}</if>
            </otherwise>
            </choose>
        </where>
        order by updated_time desc
    </select>
    
    <select id="selectPackageById" parameterType="Long" resultMap="PackageResult">
        <include refid="selectPackageVo"/>
        where id = #{id}
    </select>

    <select id="selectPackageByIdIn" parameterType="list" resultMap="PackageResult">
        <include refid="selectPackageVo"/>
        where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectMaxId"  resultType="long">
        select max(id)
            from package
    </select>

    <update id="updateDownloadNum" parameterType="list">
        update package
        SET download_num = download_num + 1
        where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <insert id="insertPackage" parameterType="Package" useGeneratedKeys="true" keyProperty="id">
        insert into package
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="payerType != null">payer_type,</if>
            <if test="senderId != null">sender_id,</if>
            <if test="receiverId != null">receiver_id,</if>
            <if test="ref1 != null">ref1,</if>
            <if test="ref2 != null">ref2,</if>
            <if test="servicesId != null">services_id,</if>
            <if test="phone != null">phone,</if>
            <if test="postalCode != null">postal_code,</if>
            <if test="batchId != null">batch_id,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
            created_time,
            updated_time,
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="payerType != null">#{payerType},</if>
            <if test="senderId != null">#{senderId},</if>
            <if test="receiverId != null">#{receiverId},</if>
            <if test="ref1 != null">#{ref1},</if>
            <if test="ref2 != null">#{ref2},</if>
            <if test="servicesId != null">#{servicesId},</if>
            <if test="phone != null">#{phone},</if>
            <if test="postalCode != null">#{postalCode},</if>
            <if test="batchId != null">#{batchId},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
            sysdate(),
            sysdate(),
         </trim>
    </insert>

    <insert id="insertPackageWithId" parameterType="Package">
        insert into package
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="payerType != null">payer_type,</if>
            <if test="senderId != null">sender_id,</if>
            <if test="receiverId != null">receiver_id,</if>
            <if test="ref1 != null">ref1,</if>
            <if test="ref2 != null">ref2,</if>
            <if test="servicesId != null">services_id,</if>
            <if test="phone != null">phone,</if>
            <if test="postalCode != null">postal_code,</if>
            <if test="batchId != null">batch_id,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
            created_time,
            updated_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="payerType != null">#{payerType},</if>
            <if test="senderId != null">#{senderId},</if>
            <if test="receiverId != null">#{receiverId},</if>
            <if test="ref1 != null">#{ref1},</if>
            <if test="ref2 != null">#{ref2},</if>
            <if test="servicesId != null">#{servicesId},</if>
            <if test="phone != null">#{phone},</if>
            <if test="postalCode != null">#{postalCode},</if>
            <if test="batchId != null">#{batchId},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
            sysdate(),
            sysdate(),
        </trim>
    </insert>

    <insert id="batchInsert" >
        insert into package (id, payer_type, sender_id, receiver_id, ref1, ref2, services_id, phone, postal_code, batch_id, mb_code, create_user, update_user, created_time, updated_time)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},
            #{item.payerType},
            #{item.senderId},
            #{item.receiverId},
            #{item.ref1},
            #{item.ref2},
            #{item.servicesId},
            #{item.phone},
            #{item.postalCode},
            #{item.batchId},
            #{item.mbCode},
            #{item.createUser},
            #{item.updateUser},
            sysdate(),
            sysdate())
        </foreach>
    </insert>

    <update id="updatePackage" parameterType="Package">
        update package
        <trim prefix="SET" suffixOverrides=",">
            <if test="payerType != null">payer_type = #{payerType},</if>
            <if test="senderId != null">sender_id = #{senderId},</if>
            <if test="receiverId != null">receiver_id = #{receiverId},</if>
            <if test="ref1 != null">ref1 = #{ref1},</if>
            <if test="ref2 != null">ref2 = #{ref2},</if>
            <if test="servicesId != null">services_id = #{servicesId},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="postalCode != null">postal_code = #{postalCode},</if>
            <if test="batchId != null">batch_id = #{batchId},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
            <if test="downloadNum != null">download_num = #{downloadNum},</if>
            updated_time = sysdate(),
        </trim>
        where id = #{id}
    </update>

    <update id="deletePackageById" parameterType="Long">
        update package set is_delete = 1, updated_time = sysdate()
        where id = #{id}
    </update>

    <update id="deletePackageByIds" parameterType="String">
        update package set is_delete = 1, updated_time = sysdate()
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>