<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.WaybillLRelMapper">
    
    <resultMap type="WaybillLRel" id="WaybillLRelResult">
        <result property="waybill"    column="waybill"    />
        <result property="waybillL"    column="waybill_l"    />
        <result property="createUser"    column="create_user"    />
        <result property="updateUser"    column="update_user"    />
        <result property="createdTime"    column="created_time"    />
        <result property="updatedTime"    column="updated_time"    />
        <result property="isDelete"    column="is_delete"    />
        <result property="status"    column="status"    />
        <result property="backDate"    column="back_date"    />
    </resultMap>

    <sql id="selectWaybillLRelVo">
        select waybill, waybill_l, create_user, update_user, created_time, updated_time, is_delete, status, back_date from waybill_l_rel
    </sql>

    <select id="selectWaybillLRelList" parameterType="WaybillLRel" resultMap="WaybillLRelResult">
        <include refid="selectWaybillLRelVo"/>
        <where>  
            <if test="waybill != null  and waybill != ''"> and waybill = #{waybill}</if>
            <if test="waybillL != null  and waybillL != ''"> and waybill_l = #{waybillL}</if>
            <if test="createUser != null  and createUser != ''"> and create_user = #{createUser}</if>
            <if test="updateUser != null  and updateUser != ''"> and update_user = #{updateUser}</if>
            <if test="createdTime != null "> and created_time = #{createdTime}</if>
            <if test="updatedTime != null "> and updated_time = #{updatedTime}</if>
            <if test="isDelete != null "> and is_delete = #{isDelete}</if>
            <if test="status != null and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectWaybillLRelByWaybill" parameterType="String" resultMap="WaybillLRelResult">
        <include refid="selectWaybillLRelVo"/>
        where waybill = #{waybill}
    </select>
        
    <insert id="insertWaybillLRel" parameterType="WaybillLRel">
        insert into waybill_l_rel
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="waybill != null">waybill,</if>
            <if test="waybillL != null">waybill_l,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
            created_time,
            updated_time,
            <if test="status != null">status,</if>
            <if test="backDate != null">back_date,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="waybill != null">#{waybill},</if>
            <if test="waybillL != null">#{waybillL},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
            sysdate(),
            sysdate(),
            <if test="status != null">#{status},</if>
            <if test="backDate != null">#{backDate},</if>
         </trim>
    </insert>

    <insert id="batchInsert">
        insert into waybill_l_rel (waybill, waybill_l, create_user, update_user, created_time, updated_time, status, back_date )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.waybill},
            #{item.waybillL},
            #{item.createUser},
            #{item.updateUser},
            sysdate(),
            sysdate(),
            #{item.status},
            #{item.backDate}
            )
        </foreach>
    </insert>

    <update id="updateWaybillLRel" parameterType="WaybillLRel">
        update waybill_l_rel
        <trim prefix="SET" suffixOverrides=",">
            <if test="waybillL != null">waybill_l = #{waybillL},</if>
            <if test="createUser != null">create_user = #{createUser},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
            updated_time = sysdate(),
            <if test="status != null">status = #{status},</if>
            <if test="backDate != null">back_date = #{backDate},</if>
        </trim>
        where waybill = #{waybill}
    </update>

    <update id="deleteWaybillLRelByWaybill" parameterType="String">
        update waybill_l_rel set is_delete = 1, updated_time = sysdate()
        where waybill = #{waybill}
    </update>

    <update id="deleteWaybillLRelByWaybills" parameterType="String">
        update waybill_l_rel set is_delete = 1, updated_time = sysdate()
        where waybill in
        <foreach item="waybill" collection="array" open="(" separator="," close=")">
            #{waybill}
        </foreach>
    </update>
</mapper>
