<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.UserAuthorizationMapper">
    
    <resultMap type="UserAuthorizationSys" id="UserAuthorizationResult">
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="userToken"    column="user_token"    />
        <result property="isDelete"    column="is_delete"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectUserAuthorizationVo">
        select user_id, user_name, user_token, is_delete, create_by, create_time, update_by, update_time, remark from user_authorization
    </sql>

    <select id="selectUserAuthorizationList" parameterType="UserAuthorizationSys" resultMap="UserAuthorizationResult">
        <include refid="selectUserAuthorizationVo"/>
        <where>
            is_delete = 0
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="userToken != null  and userToken != ''"> and user_token = #{userToken}</if>
            <if test="createBy != null  and createBy != ''"> and create_by = #{createBy}</if>
        </where>
    </select>
    
    <select id="selectUserAuthorizationByUserId" parameterType="Long" resultMap="UserAuthorizationResult">
        <include refid="selectUserAuthorizationVo"/>
        where user_id = #{userId}
    </select>
        
    <insert id="insertUserAuthorization" parameterType="UserAuthorizationSys" useGeneratedKeys="true" keyProperty="userId">
        insert into user_authorization
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null and userName != ''">user_name,</if>
            <if test="userToken != null and userToken != ''">user_token,</if>
            <if test="createBy != null">create_by,</if>
            create_time,
            <if test="updateBy != null">update_by,</if>
            update_time,
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null and userName != ''">#{userName},</if>
            <if test="userToken != null and userToken != ''">#{userToken},</if>
            <if test="createBy != null">#{createBy},</if>
            sysdate(),
            <if test="updateBy != null">#{updateBy},</if>
            sysdate(),
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateUserAuthorization" parameterType="UserAuthorizationSys">
        update user_authorization
        <trim prefix="SET" suffixOverrides=",">
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="userToken != null and userToken != ''">user_token = #{userToken},</if>
            <if test="isDelete != null">is_delete = #{isDelete},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            update_time = sysdate(),
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <update id="deleteUserAuthorizationByUserId" parameterType="Long">
        update user_authorization
         set is_delete = 1, update_time = sysdate()
         where user_id = #{userId}
    </update>

    <update id="deleteUserAuthorizationByUserIds" parameterType="String">
        update user_authorization
        set is_delete = 1, update_time = sysdate()
         where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </update>
</mapper>