<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.MbServicesMapper">
    
    <resultMap type="Services" id="ServicesResult">
        <result property="id"    column="id"    />
        <result property="codAmount"    column="cod_amount"    />
        <result property="codCurrency"    column="cod_currency"    />
        <result property="createUser"    column="create_user"    />
        <result property="updateUser"    column="update_user"    />
        <result property="createdTime"    column="created_time"    />
        <result property="updatedTime"    column="updated_time"    />
    </resultMap>

    <sql id="selectServicesVo">
        select id, cod_amount, cod_currency, create_user, update_user, created_time, updated_time from mb_services
    </sql>

    <select id="selectServicesList" parameterType="Services" resultMap="ServicesResult">
        <include refid="selectServicesVo"/>
        <where>  
            <if test="codAmount != null  and codAmount != ''"> and cod_amount = #{codAmount}</if>
            <if test="codCurrency != null  and codCurrency != ''"> and cod_currency = #{codCurrency}</if>
            <if test="createUser != null  and createUser != ''"> and create_user = #{createUser}</if>
            <if test="updateUser != null  and updateUser != ''"> and update_user = #{updateUser}</if>
            <if test="createdTime != null "> and created_time = #{createdTime}</if>
            <if test="updatedTime != null "> and updated_time = #{updatedTime}</if>
        </where>
    </select>

    <select id="selectServicesListByIdIn" resultMap="ServicesResult" parameterType="list">
        <include refid="selectServicesVo"/>
        where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectServicesById" parameterType="Long" resultMap="ServicesResult">
        <include refid="selectServicesVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertServices" parameterType="Services" useGeneratedKeys="true" keyProperty="id">
        insert into mb_services
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="codAmount != null">cod_amount,</if>
            <if test="codCurrency != null">cod_currency,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
            <if test="createdTime != null">created_time,</if>
            <if test="updatedTime != null">updated_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="codAmount != null">#{codAmount},</if>
            <if test="codCurrency != null">#{codCurrency},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
            <if test="createdTime != null">#{createdTime},</if>
            <if test="updatedTime != null">#{updatedTime},</if>
         </trim>
    </insert>

    <insert id="insertServicesWithId" parameterType="Services">
        insert into mb_services
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="codAmount != null">cod_amount,</if>
            <if test="codCurrency != null">cod_currency,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
            created_time,
            updated_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="codAmount != null">#{codAmount},</if>
            <if test="codCurrency != null">#{codCurrency},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
            sysdate(),
            sysdate(),
        </trim>
    </insert>

    <insert id="batchInsert">
        insert into mb_services (id, cod_amount, cod_currency, create_user, update_user, created_time, updated_time)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},
            #{item.codAmount},
            #{item.codCurrency},
            #{item.createUser},
            #{item.updateUser},
            sysdate(),
            sysdate())
        </foreach>
    </insert>

    <update id="updateServices" parameterType="Services">
        update mb_services
        <trim prefix="SET" suffixOverrides=",">
            <if test="codAmount != null">cod_amount = #{codAmount},</if>
            <if test="codCurrency != null">cod_currency = #{codCurrency},</if>
            <if test="createUser != null">create_user = #{createUser},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
            <if test="createdTime != null">created_time = #{createdTime},</if>
            updated_time = sysdate(),
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteServicesById" parameterType="Long">
        delete from mb_services where id = #{id}
    </delete>

    <delete id="deleteServicesByIds" parameterType="String">
        delete from mb_services where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="insertInToWithOutMb">
        insert into services
        select * from mb_services
    </insert>


    <delete id="deleteMbData">
       delete from mb_services par
        where exists(
            select * from services par2
            where par.id = par2.id
                  )
    </delete>

</mapper>
